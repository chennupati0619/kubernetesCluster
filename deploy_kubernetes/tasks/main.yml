---
  - name: 0. Starting with role deployment
    debug:
      msg: "Kuberenetes deployment started ... "

  - name: 1. Permanently disabling Selinux
    copy:
      src: config
      dest: /etc/selinux/config

  - name: 2. Permanently disabling swap
    mount:
      path: swap
      state: absent

  - name: 2.5 Making sure that firewalld is running
    service:
      name: firewalld
      state: started
      enabled: true

  - name: 3. Setting up firewall rules for master
    firewalld:
      port: "{{ item }}/tcp"
      permanent: yes
      immediate: yes
      state: enabled
    with_items:
      - "{{ FIREWALL_PORTS_MASTER }}"
    when: KUBERNETES_MASTER in inventory_hostname

  - name: 4. Setting up firewall rules for workers
    firewalld:
      port: "{{ item }}/tcp"
      permanent: yes
      state: enabled
      immediate: yes
    with_items:
      - "{{ FIREWALL_PORTS_WORKER }}"
    when: KUBERNETES_MASTER not in inventory_hostname

  - name: 5. netfilter module checking
    shell: lsmod | grep "^br_netfilter" | wc -l
    register: netfilermodule

  - name: 6. Installing | br_netfilter | module
    shell: modprobe br_netfilter
    when: netfilermodule.stdout  == '0' 


  - name: 7. Setting bridged call iptables sysctl rules
    sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_file: /etc/sysctl.d/k8ruless.conf
      reload: yes
    with_items:
    - "{{ SYSCTL_NF_CALL_RULES }}"

  - name: 8. Updating bridged iptable rules to kernel
    shell: sysctl --system
   
  - name: 9. Setting up required Kubernetes repository
    copy:
      src: kubernetesRepo
      dest: /etc/yum.repos.d/kubernetes.repo

  - name: 9.x Deploying additional repository if OS is Redhat
    copy:
      src: extraRepo
      dest: /etc/yum.repos.d/extra.repo
    when: ansible_distribution == 'RedHat'

  - name: 10. Installing required | Kubernetes | packages
    yum:
      name: "{{ KUBERNET_PACKAGES }}"
      state: present
#      disable_excludes: kubernetes

  - name: 11. Starting |docker , kubelet| service
    service: 
      name: "{{ item }}"
      state: started
      enabled: true
    with_items:
    - "{{ KUBERNET_SERVICES }}"

  - name: 12. Check if Kubernetes has already been initialized.
    stat:
      path: /etc/kubernetes/admin.conf
    register: kubernetes_init_stat

  - name: 13. [ ------------------------ | Master Setup | ----------------------
    include_tasks: k8-master-setup.yml
    when: KUBERNETES_MASTER in inventory_hostname

  - name: 14. [ ------------------------ | Nodes/Worker Setup | ----------------
    include_tasks: k8-worker-setup.yml
    when: KUBERNETES_MASTER not in inventory_hostname

  - name: 15. Ending with role deployment
    debug:
      msg: "Kuberenetes deployment ended ... "
